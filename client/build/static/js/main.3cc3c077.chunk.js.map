{"version":3,"sources":["components/DetailComponent.js","components/Form.js","components/List.js","components/AppComponent.js","components/UpdateComponent.js","App.js","serviceWorker.js","index.js"],"names":["DetailComponent","id","useState","detailState","setDetailState","useEffect","axios","get","then","res","data","catch","err","console","log","title","price","description","Form","changeForm","handleSubmit","formState","errors","onSubmit","type","name","value","onChange","e","className","map","i","key","List","listState","deleteHandler","item","to","_id","onClick","AppComponent","setFormState","setListState","setErrors","target","preventDefault","post","response","errorArr","Object","keys","push","message","prodId","delete","filter","removeFromDom","UpdateComponent","changeHandler","put","navigate","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3cc3c077.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst DetailComponent = ({id}) =>{\r\n\r\n    const [detailState, setDetailState] = useState({})\r\n\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/product/'+id)\r\n            .then(res => {\r\n                setDetailState(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    },[])\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>DETAILS</h1>\r\n            <h3>{detailState.title}</h3>\r\n            <h3>{detailState.price}</h3>\r\n            <h3>{detailState.description}</h3>\r\n        </div>\r\n    )\r\n}\r\nexport default DetailComponent;","import React from 'react'\r\n\r\nconst Form = ({changeForm, handleSubmit, formState, errors}) =>{\r\n    return(\r\n        <div>\r\n            <h1>Product Manager</h1>\r\n            <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <p>\r\n                    Title:\r\n                    <input type=\"text\" name=\"title\" value={formState.title} onChange={(e) =>changeForm(e)} />\r\n                </p>\r\n                <p>\r\n                    Price:\r\n                    <input type=\"number\" name=\"price\" value={formState.price} onChange={(e) => changeForm(e)} />\r\n                </p>\r\n                <p>\r\n                    Description:\r\n                    <input type=\"text\" name=\"description\" value={formState.description} onChange={(e) => changeForm(e)} />\r\n                </p>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n            {errors.map((err, i) => <p key={i}>{err}</p>)}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Form;","import React from 'react'\r\nimport {Link} from '@reach/router'\r\n\r\nconst List = ({listState, deleteHandler}) =>{\r\n    return(\r\n        <div>\r\n            {listState.map((item, i) => (\r\n                <div key={i}>\r\n                    <p>\r\n                        <Link to={\"/\" + item._id}>\r\n                            Detail: {item.title}\r\n                        </Link>\r\n                    </p>\r\n                    <p>\r\n                        <Link to={\"/\" + item._id + \"/edit\"}>\r\n                            Update: {item.title}\r\n                        </Link>\r\n                    </p>\r\n                    <p>\r\n                        <button onClick={()=> deleteHandler(item._id)}>Delete</button>\r\n                    </p>\r\n                    <hr></hr>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default List;","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Form from './Form'\r\nimport List from './List'\r\nimport { navigate } from '@reach/router'\r\n\r\nconst AppComponent = () =>{\r\n\r\n    const [formState, setFormState] = useState({\r\n        title:'',\r\n        price:0,\r\n        description:''\r\n    })\r\n    const [listState, setListState] = useState([])\r\n    const [errors, setErrors] = useState([])\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8000/api/products\")\r\n            .then(res => {\r\n                setListState(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    },[])\r\n\r\n    const changeForm = e => {\r\n        console.log(\"EVENT NAME: \", e.target.name)\r\n        console.log(\"EVENT VAL: \", e.target.value)\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    // CREATE FUNCTIONALITY\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        axios.post(\"http://localhost:8000/api/products\",formState )\r\n            .then(res => console.log(res))\r\n            .catch(err => {\r\n                const {errors} = err.response.data;\r\n                const errorArr = []\r\n                for(const key of Object.keys(errors)){\r\n                    errorArr.push(errors[key].message)\r\n                }\r\n                setErrors(errorArr)\r\n            })\r\n    }\r\n\r\n    const removeFromDom = (prodId) =>{\r\n        setListState(\r\n            listState.filter(item => item._id != prodId)\r\n        )\r\n    }\r\n\r\n\r\n    const deleteHandler = (prodId) =>{\r\n        axios.delete(\"http://localhost:8000/api/product/\"+prodId)\r\n            .then(res => {\r\n                removeFromDom(prodId)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Form changeForm={changeForm} handleSubmit={handleSubmit} formState={formState} errors={errors} />\r\n            <List listState={listState} deleteHandler={deleteHandler} />\r\n        </div>\r\n    )\r\n}\r\nexport default AppComponent;","import React, {useEffect, useState} from 'react'\r\nimport {navigate} from \"@reach/router\"\r\nimport axios from 'axios'\r\n\r\n\r\nconst UpdateComponent = ({id}) =>{\r\n\r\n    const [detailState, setDetailState] = useState({\r\n\r\n    })\r\n    const [errors, setErrors] = useState([])\r\n\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/product/'+id)\r\n            .then(res => {\r\n                setDetailState(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    },[])\r\n\r\n    const changeHandler = e => {\r\n        setDetailState({\r\n            ...detailState,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        axios.put(\"http://localhost:8000/api/product/\"+id, detailState)\r\n            .then(res => {\r\n                console.log(\"NEW OBJECT CAME BACK: \",res)\r\n                navigate(\"/\" + res.data._id)\r\n            })\r\n            .catch(err => {\r\n                const {errors} = err.response.data;\r\n                const errorArr = []\r\n                for(const key of Object.keys(errors)){\r\n                    errorArr.push(errors[key].message)\r\n                }\r\n                setErrors(errorArr)\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Update Comp</h1>\r\n            <h1>Product Manager</h1>\r\n            <div>\r\n                <form onSubmit={submitHandler}>\r\n                    <p>\r\n                        Title:\r\n                        <input type=\"text\" name=\"title\" value={detailState.title} onChange={changeHandler} />\r\n                    </p>\r\n                    <p>\r\n                        Price:\r\n                        <input type=\"number\" name=\"price\" value={detailState.price} onChange={changeHandler} />\r\n                    </p>\r\n                    <p>\r\n                        Description:\r\n                        <input type=\"text\" name=\"description\" value={detailState.description} onChange={changeHandler} />\r\n                    </p>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n                {errors.map((err, i) => <p key={i}>{err}</p>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateComponent;","import React from 'react';\nimport {Router} from \"@reach/router\"\n\nimport DetailComponent from './components/DetailComponent'\nimport AppComponent from './components/AppComponent'\nimport UpdateComponent from './components/UpdateComponent'\n\nfunction App() {\n  \n  return (\n    <div className=\"container\">\n      <Router>\n        <AppComponent path=\"/\" />\n        <DetailComponent path=\"/:id\" />\n        <UpdateComponent path=\"/:id/edit\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}